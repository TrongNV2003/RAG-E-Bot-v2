from fastapi import UploadFile, File
from pydantic import BaseModel, Field
from typing import List

class InputText(BaseModel):
    index_name: str = Field(..., description="T√™n index", examples=["text_embeddings"])
    text_input: str = Field(..., description="Text to be upserted", examples=["T√¥i t√™n l√† Tr·ªçng, t√¥i ƒë√£ t·ªët nghi·ªáp tr∆∞·ªùng ƒê·∫°i h·ªçc Khoa h·ªçc v√† C√¥ng ngh·ªá H√† N·ªôi v·ªõi t·∫•m b·∫±ng lo·∫°i kh√°. T√¥i r·∫•t th√≠ch h·ªçc l·∫≠p tr√¨nh v√† ƒëang theo ƒëu·ªïi chuy√™n ng√†nh AI Engineer, t√¥i r·∫•t ƒëam m√™ l√†m vi·ªác v·ªõi NLP v√† hi·ªán t√¥i ƒëang l√†m vi·ªác t·∫°i c√¥ng ty GHTK."])

class InputQuery(BaseModel):
    text_input: str = Field(..., description="Question query", examples=["Ho√†ng Sa, Tr∆∞·ªùng Sa l√† c·ªßa n∆∞·ªõc n√†o?"])
    
class InputParams(BaseModel):
    temperature: float = Field(..., description="Temperature", examples=[0.8])
    threshold: float = Field(..., description="Threshold", examples=[1])
    top_k: int = Field(..., description="Top K", examples=[5])
    is_retrieval: bool = Field(..., description="Is retrieval", examples=[True, False])
    
class InputFile(BaseModel):
    index_name: str = Field(..., description="Index", examples=["text_embeddings"])
    file_path: UploadFile = File(...)
    
class ChatMessage(BaseModel):
    role: str = Field(None, description="Role of the participant", examples=["user", "assistant"])
    content: str = Field(None, description="Content of the message", examples=["Hello!", "How can I help you?"])

class ChatHistory(BaseModel):
    chat_history: List[ChatMessage] = Field(
        None, 
        description="Chat history as a list of messages",
        examples=[[
            {"role": "assistant", "content": "Hello! I am RAG-E. How can I assist you today?"},
            {"role": "user", "content": "B·∫°n t√™n l√† g√¨?"},
            {"role": "assistant", "content": "T√¥i l√† RAG-E, m·ªôt AI h·ªó tr·ª£ t√¨m ki·∫øm th√¥ng tin. B·∫°n c·∫ßn gi√∫p g√¨?"},
            ]
        ]
    )

class HealthCheckResponse(BaseModel):
    messages: str = Field(..., description="Message", examples=["I am fine! üëçüèª"])
    
class DocumentTypes(BaseModel):
    document_type: str = Field(..., description="Document type", examples=["Document"])